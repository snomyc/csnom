#sql
spring.datasource.url=jdbc:mysql://47.98.142.249/amazon?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&useSSL=false
spring.datasource.username=root
spring.datasource.password=Yc@123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 初始化大小，最小，最大
spring.datasource.initialSize=10
spring.datasource.minIdle=10
spring.datasource.maxActive=2000
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=30000
spring.datasource.validationQuery=SELECT 1
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

#jpa
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql= true
#thymeleaf
spring.thymeleaf.cache=false


#redis
spring.redis.database=0
spring.redis.host=47.98.142.249
spring.redis.password=amazon12345678
spring.redis.port=6379
spring.redis.pool.max-wait=-1
spring.redis.pool.max-active=8
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=1
spring.redis.timeout=10000

#rabbitmq
spring.application.name=amazon-rabbitmq
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=123456
spring.rabbitmq.publisher-confirms=true  
spring.rabbitmq.publisher-returns=true


#zookeeper配置
dubbo.registry.id=csnom-dubbo-registry
dubbo.registry.address=zookeeper://47.98.142.249:2181
dubbo.protocol.serialization=java
dubbo.consumer.timeout=60000
#/**注意这里的注解是dubbo的注解，这里没有使用注册中心，为直连方式，各自本地开发可以放开 （dubbo://ip:服务端口）
#dubbo.reference.url = dubbo://127.0.0.1:9394

# 线程池类型
# fixed 固定大小线程池，启动时建立线程，不关闭，一直持有。(缺省)
# cached 缓存线程池，空闲一分钟自动删除，需要时重建。
# limited 可伸缩线程池，但池中的线程数只会增长不会收缩。只增长不收缩的目的是为了避免收缩时突然来了大流量引起的性能问题。
dubbo.application.protocol.threadpool=cached
# 线程池大小(固定大小)
dubbo.application.protocol.threads=100
# IO线程池大小(固定大小)cpu个数+1	性能调优
#dubbo.application.protocol.iothreads=5